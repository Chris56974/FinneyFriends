/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Wallet } from "../Wallet";

export class Wallet__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Wallet> {
    return super.deploy(overrides || {}) as Promise<Wallet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Wallet {
    return super.attach(address) as Wallet;
  }
  connect(signer: Signer): Wallet__factory {
    return super.connect(signer) as Wallet__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Wallet {
    return new Contract(address, _abi, signerOrProvider) as Wallet;
  }
}

const _abi = [
  {
    inputs: [],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "a",
        type: "uint8",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a6b806100206000396000f3fe60806040526004361061003f5760003560e01c806327e235e314610044578063722713f714610081578063c6ab5d90146100ac578063d0e30db0146100d5575b600080fd5b34801561005057600080fd5b5061006b600480360381019061006691906106a9565b6100df565b6040516100789190610804565b60405180910390f35b34801561008d57600080fd5b506100966100ff565b6040516100a39190610804565b60405180910390f35b3480156100b857600080fd5b506100d360048036038101906100ce91906106d2565b610152565b005b6100dd6102e9565b005b60006020528060005260406000206000915054906101000a900460ff1681565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905090565b6000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166101ab91906108c8565b60ff1610156101ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e6906107e4565b60405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661024691906108c8565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055503373ffffffffffffffffffffffffffffffffffffffff166108fc8260ff169081150290604051600060405180830381858888f193505050501580156102e5573d6000803e3d6000fd5b5050565b6103286040518060400160405280601281526020017f746865206d73672e73656e6465722069732000000000000000000000000000008152503361051e565b6103b56040518060400160405280601181526020017f74686569722062616c616e6365206973200000000000000000000000000000008152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660ff166105ba565b6103d7604051806060016040528060268152602001610a1060269139346105ba565b61046f6040518060400160405280600e81526020017f746f206120746f74616c206f6620000000000000000000000000000000000000815250346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660ff1661046a919061083b565b6105ba565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166104c69190610891565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff160217905550565b6105b68282604051602401610534929190610784565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610656565b5050565b61065282826040516024016105d09291906107b4565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610656565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60008135905061068e816109e1565b92915050565b6000813590506106a3816109f8565b92915050565b6000602082840312156106bb57600080fd5b60006106c98482850161067f565b91505092915050565b6000602082840312156106e457600080fd5b60006106f284828501610694565b91505092915050565b610704816108fc565b82525050565b60006107158261081f565b61071f818561082a565b935061072f818560208601610945565b610738816109a7565b840191505092915050565b600061075060148361082a565b915061075b826109b8565b602082019050919050565b61076f8161092e565b82525050565b61077e81610938565b82525050565b6000604082019050818103600083015261079e818561070a565b90506107ad60208301846106fb565b9392505050565b600060408201905081810360008301526107ce818561070a565b90506107dd6020830184610766565b9392505050565b600060208201905081810360008301526107fd81610743565b9050919050565b60006020820190506108196000830184610775565b92915050565b600081519050919050565b600082825260208201905092915050565b60006108468261092e565b91506108518361092e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561088657610885610978565b5b828201905092915050565b600061089c82610938565b91506108a783610938565b92508260ff038211156108bd576108bc610978565b5b828201905092915050565b60006108d382610938565b91506108de83610938565b9250828210156108f1576108f0610978565b5b828203905092915050565b60006109078261090e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610963578082015181840152602081019050610948565b83811115610972576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f7769746864726177696e6720746f6f206d756368000000000000000000000000600082015250565b6109ea816108fc565b81146109f557600080fd5b50565b610a0181610938565b8114610a0c57600080fd5b5056fe746865792077616e7420746f2062756d702075702074686569722062616c616e636520627920a2646970667358221220ae524ee5a4edbab2698c9beb03f904ff8876464b1b2267d2c504538ab3d1f7ae64736f6c63430008030033";
